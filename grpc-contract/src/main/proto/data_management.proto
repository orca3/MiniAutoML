syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.orca3.miniAutoML";
option java_outer_classname = "DataManagementProto";

import "google/protobuf/empty.proto";

package data_management;

service DataManagementService {
  rpc ListDatasetCommits (DatasetPointer) returns (DatasetSummary);
  rpc ListDatasets (ListQueryOptions) returns (stream DatasetPointer);
  rpc CreateDataset (CreateDatasetRequest) returns (DatasetVersionPointer);
  rpc UpdateDataset (CreateCommitRequest) returns (DatasetVersionPointer);
  rpc FetchVersionedDataset (DatasetQuery) returns (DatasetVersionHash);
  rpc FetchDatasetByVersionHash (VersionHashQuery) returns (VersionHashDataset);
  rpc DeleteDataset (DatasetPointer) returns (google.protobuf.Empty);
}

message CreateDatasetRequest {
  string name = 1;
  string description = 2;
  DatasetType dataset_type = 3;
  string uri = 4;
  repeated Tag tags = 5;
}

message ListQueryOptions {
  int32 limit = 1;
  int32 index = 2;
}

message CreateCommitRequest {
  string dataset_id = 1;
  string commit_message = 2;
  string uri = 3;
  repeated Tag tags = 4;
}

message DatasetVersionPointer {
  string dataset_id = 1;
  string commit_id = 2;
}

message DatasetQuery {
  string dataset_id = 1;
  string commit_id = 2;
  repeated Tag tags = 3;
}

message VersionHashQuery {
  string dataset_id = 1;
  string version_hash = 2;
}

message DatasetPointer {
  string dataset_id = 1;
}

message DatasetSummary {
  string datasetId = 1;
  string name = 2;
  string description = 3;
  DatasetType dataset_type = 4;
  string last_updated_at = 5;
  repeated CommitInfo commits = 6;

}

message DatasetVersionHash {
  string dataset_id = 1;
  string name = 2;
  string description = 3;
  DatasetType dataset_type = 4;
  string last_updated_at = 5;
  string version_hash = 6;
}

message DatasetPart {
  string dataset_id = 1;
  string commit_id = 2;
  string uri = 3;
}

message VersionHashDataset {
  string dataset_id = 1;
  string version_hash = 2;
  SnapshotState state = 3;
  repeated FileInfo parts = 4;
}

message CommitInfo {
  string dataset_id = 1;
  string commit_id = 2;
  string created_at = 3;
}

message Tag {
  string tag_key = 1;
  string tag_value = 2;
}

message FileInfo {
  string name = 1;
  string bucket = 2;
  string path = 3;
}

enum DatasetType {
  GENERIC = 0;
  TEXT_INTENT = 1;
}

enum SnapshotState {
  RUNNING = 0;
  READY = 1;
  FAILED = 2;
}
